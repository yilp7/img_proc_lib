#ifndef __HQV_API_H__
#define __HQV_API_H__

#ifdef _MSC_VER
	#ifdef _HQVAPI_EXPORTS
		#define HQV_API __declspec(dllexport)
	#elif defined HQVAPI_STATIC
		#define HQV_API
	#else
		#define HQV_API __declspec(dllimport)
	#endif
#elif defined __GNUC__
	#define HQV_API __attribute__((dllexport))
#else
	#define HQV_API
#endif

#if (defined (_WIN32) || defined(WIN64))
	#define CALL_METHOD __stdcall
#elif defined __GNUC__
	#define CALL_METHOD __attribute__((__stdcall))
#else
	#define CALL_METHOD
#endif 

#include "HQV_Common.h"

#ifdef __cplusplus
extern "C"{
#endif

HQV_API HQV_RESULT CALL_METHOD HQV_DeviceScan(OUT PBYTE DevNumber, IN HQV_DEVICETYPE DevType = DEVICE_UDEF);
HQV_API HQV_RESULT CALL_METHOD HQV_DeviceGetInfo(IN PVOID pDevDescription, OUT PHQV_DEVINFO pDevInfo, IN HQV_DEVICEACCESSMODE AccessMode = DEVICE_INDEX, IN HQV_DEVICETYPE DevType = DEVICE_UDEF);
HQV_API HQV_RESULT CALL_METHOD HQV_DeviceOpen(IN PVOID pDevDescription, OUT PHANDLE pHDev, IN HQV_DEVICEACCESSMODE AccessMode = DEVICE_INDEX, IN HQV_DEVICETYPE DevType = DEVICE_UDEF);
HQV_API HQV_RESULT CALL_METHOD HQV_DeviceClose(IN PHANDLE pHDev);

HQV_API HQV_RESULT CALL_METHOD HQV_CaptureStart(IN HANDLE hDev);
HQV_API HQV_RESULT CALL_METHOD HQV_CaptureStop(IN HANDLE hDev);

HQV_API HQV_RESULT CALL_METHOD HQV_ParamGetRange(IN HANDLE hDev, IN HQV_DEVPARAM DevParam, OUT PVOID pMinVal, OUT PVOID pMaxVal);
HQV_API HQV_RESULT CALL_METHOD HQV_ParamGetClass(IN HANDLE hDev, IN HQV_DEVPARAM DevParam, OUT PARAM_CLASSTYPE& pClassType);
HQV_API HQV_RESULT CALL_METHOD HQV_ParamGetValid(IN HANDLE hDev, IN HQV_DEVPARAM DevParam, OUT PARAM_VALIDTYPE& pValidType);
HQV_API HQV_RESULT CALL_METHOD HQV_ParamGetDescription(IN HANDLE hDev, IN HQV_DEVPARAM DevParam, OUT PCHAR pDescr);
HQV_API HQV_RESULT CALL_METHOD HQV_ParamGetInfo(IN HANDLE hDev, IN HQV_DEVPARAM DevParam, OUT PHQV_DEVPARAMINFO pParamInfo);
HQV_API HQV_RESULT CALL_METHOD HQV_ParamGetValue(IN HANDLE hDev, IN HQV_DEVPARAM DevParam, OUT PVOID pVal, IN PARAM_VALUETYPE Type= VALUE_INT);
HQV_API HQV_RESULT CALL_METHOD HQV_ParamSetValue(IN HANDLE hDev, IN HQV_DEVPARAM DevParam, IN PVOID pVal, IN PARAM_VALUETYPE Type= VALUE_INT);
HQV_API HQV_RESULT CALL_METHOD HQV_ParamGetUnit(HANDLE hDev, IN HQV_DEVPARAM DevParam, OUT PCHAR pUnit);
HQV_API HQV_RESULT CALL_METHOD HQV_ParamGetName(HANDLE hDev, OUT PHQV_DEVPARAM pDevParam);

HQV_API HQV_RESULT CALL_METHOD HQV_DisplayInit(IN HANDLE hDev, IN BYTE ChannelNo, IN HWND hWnd, IN RECT Rect, IN BOOL Bayer3x3=FALSE, IN PCHAR pTitle=NULL);
HQV_API HQV_RESULT CALL_METHOD HQV_DisplayFrame(IN HANDLE hDev, IN BYTE ChannelNo, IN PHQV_FRAMEINFO pFrameInfo, IN BOOL VSync=FALSE);
HQV_API HQV_RESULT CALL_METHOD HQV_DisplayAddText(IN HANDLE hDev, IN BYTE ChannelNo, IN PCHAR pText, IN INT PosX=-1, IN INT PosY=-1, IN INT Size=-1, IN INT Color=-1);
HQV_API HQV_RESULT CALL_METHOD HQV_DisplayFini(IN HANDLE hDev, IN BYTE ChannelNo);
HQV_API HQV_RESULT CALL_METHOD HQV_DisplaySetWindowPosition(IN HANDLE hDev, IN BYTE ChannelNo, IN int xPos, IN int yPos, IN int nWidth, IN int nHeight);

HQV_API HQV_RESULT CALL_METHOD HQV_VideoRecordInit(IN HANDLE hDev, IN BYTE ChannelNo, IN PCHAR pFileName, IN INT Width, IN INT Height, IN INT PixelBytes, IN FLOAT FrameRate=24.0f, IN HQV_CODEC Codec = CODEC_ASV1);
HQV_API HQV_RESULT CALL_METHOD HQV_VideoRecordAddFrame(IN HANDLE hDev, IN BYTE ChannelNo, IN PBYTE pBuf, IN INT Size=-1);
HQV_API HQV_RESULT CALL_METHOD HQV_VideoRecordFini(IN HANDLE hDev, IN BYTE ChannelNo);

HQV_API HQV_RESULT CALL_METHOD HQV_SingleFrameCapture(IN HANDLE hDev,  IN PHQV_FRAMEINFO pFrameInfo, IN HQV_DATATYPE eDType, IN INT TimeOut = 1000, IN BOOL IsWait=TRUE);
HQV_API HQV_RESULT CALL_METHOD HQV_SingleFrameWaitCompleteEvent(IN HANDLE hDev, IN  INT TimeOut = 1000);
HQV_API HQV_RESULT CALL_METHOD HQV_SingleFrameSavefile(IN HANDLE hDev, IN PHQV_FRAMEINFO pFrameInfo, IN HQV_FILETYPE eFType,IN PCHAR pFileName, IN INT Quality=90);
HQV_API HQV_RESULT CALL_METHOD HQV_SingleFrameConvert(IN HANDLE hDev,  IN PHQV_FRAMEINFO pSrcFrameInfo, IN PHQV_FRAMEINFO pDstFrameInfo,IN  BOOL Bayer3x3=FALSE);

HQV_API HQV_RESULT CALL_METHOD HQV_SetFrameCallback(IN HANDLE hDev, IN FRAME_CALLBACK lpFrameFun, IN PVOID pContext, IN HQV_DATATYPE Type);
HQV_API HQV_RESULT CALL_METHOD HQV_SetInfoCallback(IN HANDLE hDev, IN INFO_CALLBACK lpInfoFun, IN PVOID pContext);

HQV_API HQV_RESULT CALL_METHOD HQV_RegValueSet(IN HANDLE hDev, IN HQV_COMPORT PortNo, IN DWORD Address, IN DWORD Val);
HQV_API HQV_RESULT CALL_METHOD HQV_RegValueGet(IN HANDLE hDev, IN HQV_COMPORT PortNo, IN DWORD Address, OUT PDWORD pVal);

HQV_API HQV_RESULT CALL_METHOD HQV_DataBufSend(IN HANDLE hDev, IN DWORD Target, IN PBYTE pDataBuf, IN DWORD Length);
HQV_API HQV_RESULT CALL_METHOD HQV_DataBufRecv(IN HANDLE hDev, IN DWORD Target, OUT PBYTE pDataBuf, OUT PDWORD pLength);

HQV_API HQV_RESULT CALL_METHOD HQV_SaveConfigFile(IN HANDLE hDev, IN PCHAR pFileName=NULL);
HQV_API HQV_RESULT CALL_METHOD HQV_LoadConfigFile(IN HANDLE hDev, IN PCHAR pFileName=NULL);

HQV_API HQV_RESULT CALL_METHOD HQV_GetVersion(OUT int *piMaj1, OUT int *piMaj2, OUT int *piMin1, OUT int *piMin2);

#ifdef __cplusplus
}
#endif

#endif


